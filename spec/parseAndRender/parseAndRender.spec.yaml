file: '../../src/parseAndRender.js'
group: parseAndRender
suites: [e2e]
---
### End-to-End Tests
suite: e2e
exportName: default
---
case: simple variable replacement
in:
  - name: "${firstName} ${lastName}"
    age: "${age}"
  - firstName: "John"
    lastName: "Doe" 
    age: 30
  - functions: {}
out:
  name: "John Doe"
  age: 30
---
case: nested object with variables
in:
  - user:
      profile:
        displayName: "${user.name}"
        email: "${user.email}"
      settings:
        theme: "${preferences.theme}"
  - user:
      name: "Alice Smith"
      email: "alice@example.com"
    preferences:
      theme: "dark"
  - functions: {}
out:
  user:
    profile:
      displayName: "Alice Smith"
      email: "alice@example.com"
    settings:
      theme: "dark"
---
case: array with string interpolation
in:
  - - "Hello ${name}!"
    - "You have ${count} messages"
    - "${status}"
  - name: "Bob"
    count: 5
    status: "online"
  - functions: {}
out:
  - "Hello Bob!"
  - "You have 5 messages"
  - "online"
---
case: conditional rendering - if true
in:
  - $if age >= 18:
      status: "adult"
      canVote: true
    $else:
      status: "minor"
      canVote: false
  - age: 25
  - functions: {}
out:
  status: "adult"
  canVote: true
---
case: conditional rendering - if false
in:
  - $if age >= 18:
      status: "adult"
      permissions: ["vote", "drive"]
    $else:
      status: "minor"
      permissions: ["school"]
  - age: 16
  - functions: {}
out:
  status: "minor"
  permissions: ["school"]
---
case: conditional with comparison operators
in:
  - $if score > 90:
      grade: "A"
    $elif score > 80:
      grade: "B" 
    $elif score > 70:
      grade: "C"
    $else:
      grade: "F"
  - score: 85
  - functions: {}
out:
  grade: "B"
---
case: simple loop
in:
  - users:
      $for user in users:
        name: "${user.name}"
        role: "${user.role}"
  - users:
      - name: "Alice"
        role: "admin"
      - name: "Bob" 
        role: "user"
      - name: "Carol"
        role: "moderator"
  - functions: {}
out:
  users:
    - name: "Alice"
      role: "admin"
    - name: "Bob"
      role: "user" 
    - name: "Carol"
      role: "moderator"
---
case: loop with index
in:
  - items:
      $for item, index in items:
        id: "${index}"
        value: "${item}"
        position: "Item #${index}"
  - items: ["apple", "banana", "cherry"]
  - functions: {}
out:
  items:
    - id: 0
      value: "apple"
      position: "Item #0"
    - id: 1
      value: "banana"
      position: "Item #1"
    - id: 2
      value: "cherry"
      position: "Item #2"
---
case: nested conditionals and loops
in:
  - report:
      activeUsers:
        $for user in activeUsers:
          name: "${user.name}"
          lastLogin: "${user.lastLogin}"
      stats:
        total: "${totalUsers}"
  - activeUsers:
      - name: "Alice"
        lastLogin: "2023-12-20"
      - name: "Carol"
        lastLogin: "2023-12-22"
    totalUsers: 3
  - functions: {}
out:
  report:
    activeUsers:
      - name: "Alice"
        lastLogin: "2023-12-20"
      - name: "Carol"
        lastLogin: "2023-12-22"
    stats:
      total: 3
---
case: complex string interpolation
in:
  - summary: "User ${user.name} (ID: ${user.id}) has ${user.postCount} posts and ${user.followerCount} followers"
    details:
      - "Email: ${user.email}"
      - "Joined: ${user.joinDate}"
      - "Status: ${user.status}"
  - user:
      id: 123
      name: "John Doe"
      email: "john@example.com"
      joinDate: "2023-01-15"
      status: "Active"
      postCount: 2
      followerCount: 3
  - functions: {}
out:
  summary: "User John Doe (ID: 123) has 2 posts and 3 followers"
  details:
    - "Email: john@example.com"
    - "Joined: 2023-01-15"
    - "Status: Active"
---
case: missing variables handling
in:
  - name: "${name}"
    missing: "${nonexistent}"
    nested: "${user.profile.missing}"
  - name: "Alice"
  - functions: {}
out:
  name: "Alice"
---
case: boolean and numeric literals
in:
  - config:
      enabled: true
      port: 8080
      timeout: 30.5
      debug: false
      name: "${appName}"
  - appName: "MyApp"
  - functions: {}
out:
  config:
    enabled: true
    port: 8080
    timeout: 30.5
    debug: false
    name: "MyApp"
---
case: mixed array types
in:
  - - 1
    - "${name}"
    - true
    - "Count: ${count}"
    - null
  - name: "test"
    count: 42
  - functions: {}
out:
  - 1
  - "test"
  - true
  - "Count: 42"
  - null
---
case: empty template and data
in:
  - {}
  - {}
  - functions: {}
out: {}
---
case: logical operators in conditionals
in:
  - $if isAdmin && isActive:
      access: "full"
    $elif isUser && isActive:
      access: "limited"
    $else:
      access: "none"
  - isAdmin: false
    isUser: true
    isActive: true
  - functions: {}
out:
  access: "limited"
---
case: nested objects with loops and conditionals
in:
  - dashboard:
      users:
        $for user in users:
          name: "${user.name}"
          $if user.premium:
            badge: "Premium"
            features: ["advanced", "priority"]
          $else:
            badge: "Standard" 
            features: ["basic"]
      stats:
        total: "${users.length}"
        premium: "${premiumCount}"
  - users:
      - name: "Alice"
        premium: true
      - name: "Bob"
        premium: false
      - name: "Carol"
        premium: true
    premiumCount: 2
  - functions: {}
out:
  dashboard:
    users:
      - name: "Alice"
        badge: "Premium"
        features: ["advanced", "priority"]
      - name: "Bob"
        badge: "Standard"
        features: ["basic"]
      - name: "Carol"
        badge: "Premium"
        features: ["advanced", "priority"]
    stats:
      total: 3
      premium: 2
---
case: loop inside array syntax
in:
  - rtgl-view#projects:
      - $for p, i in projects:
          - rtgl-view:
            - rtgl-text: "${p.title}"
            - rtgl-text: "${p.description}"
            - rtgl-text: "${i}"
  - projects:
      - title: "Project Alpha"
        description: "First project"
      - title: "Project Beta"
        description: "Second project"
  - functions: {}
out:
  rtgl-view#projects:
    - - rtgl-view:
          - rtgl-text: "Project Alpha"
          - rtgl-text: "First project"
          - rtgl-text: 0
      - rtgl-view:
          - rtgl-text: "Project Beta"
          - rtgl-text: "Second project"
          - rtgl-text: 1
---
case: conditional rendering issue - filter buttons (exact failing syntax)  
in:
  - - rtgl-view#footer d=h jc=space-between p=md c=mu-fg :
        - rtgl-text: "${activeCount} ${itemText} left"
        - $if isAllFilter:
            - rtgl-button#filter-all v=pr: "All"
          $else:
            - rtgl-button#filter-all v=lk: "All"
        - $if isActiveFilter:
            - rtgl-button#filter-active v=pr: "Active"
          $else:
            - rtgl-button#filter-active v=lk: "Active"
        - $if isCompletedFilter:
            - rtgl-button#filter-completed v=pr: "Completed"
          $else:
            - rtgl-button#filter-completed v=lk: "Completed"
        - rtgl-button#clear-completed v=lk: "Clear completed (${completedCount})"
  - activeCount: 2
    itemText: "items"
    isAllFilter: true
    isActiveFilter: false
    isCompletedFilter: false
    completedCount: 1
  - functions: {}
out:
  - rtgl-view#footer d=h jc=space-between p=md c=mu-fg :
      - rtgl-text: "2 items left"
      - rtgl-button#filter-all v=pr: "All"
      - rtgl-button#filter-active v=lk: "Active"
      - rtgl-button#filter-completed v=lk: "Completed"
      - rtgl-button#clear-completed v=lk: "Clear completed (1)"
---
case: placeholder attribute with variable
in:
  - - input placeholder="${placeholderText}":
  - placeholderText: "What needs to be done?"
  - functions: {}
out:
  - input placeholder="What needs to be done?":
---
case: $if statement undefined boolean
in:
  - - $if isAdult:
        - message: Hello adult!
      $else:
        - message: Hello child!
  - {}
  - functions: {}
out:
  - message: Hello child!
---
case: escaped variables in template
in:
  - escaped: "\\${notVariable}"
    mixed: "\\${escaped} but ${real}"
    doubleEscaped: "\\\\${actualVariable}"
    onlyEscape: "\\${}"
    multipleEscapes: "\\${one} and \\${two}"
    normalVar: "${price}"
  - real: "realValue"
    actualVariable: "test"
    price: 100
  - functions: {}
out:
  escaped: "${notVariable}"
  mixed: "${escaped} but realValue"
  doubleEscaped: "\\test"
  onlyEscape: "${}"
  multipleEscapes: "${one} and ${two}"
  normalVar: 100
---
case: timeline with property.name rendering
in:
  - template:
      - rtgl-view#timeline-container g=md w=f pos=rel:
          - rtgl-view d=h w=f mb=sm:
              - rtgl-view w=f ah=e:
                  - rtgl-text s=sm: "Total: ${totalDuration}"
          - $if selectedProperties.length > 0:
              - $for property in selectedProperties:
                  - rtgl-view d=h w=f av=c:
                      - rtgl-view w=48 av=c d=h:
                          - rtgl-text s=xs: ${property.name}
                          - $if editable:
                              rtgl-button#add-keyframe-${property.name} s=sm wh=16 v=gh cur=p ml=xs: +
                      - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                          - rtgl-text s=xs: ${property.initialValue}
                      - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                          - $if property.keyframes:
                              - $for keyframe, j in property.keyframes:
                                  - rtgl-view#keyframe-${property.name}-${j} d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                                      - rtgl-text s=xs: ${keyframe.duration}ms
  - totalDuration: "5000ms"
    editable: true
    selectedProperties:
      - name: "opacity"
        initialValue: "0"
        keyframes:
          - duration: 1000
          - duration: 2000
      - name: "scale"
        initialValue: "1"
        keyframes:
          - duration: 500
          - duration: 1500
          - duration: 1000
      - name: "rotation"
        initialValue: "0deg"
        keyframes: []
  - functions: {}
out:
  template:
    - rtgl-view#timeline-container g=md w=f pos=rel:
        - rtgl-view d=h w=f mb=sm:
            - rtgl-view w=f ah=e:
                - rtgl-text s=sm: "Total: 5000ms"
        - - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: opacity
                  - rtgl-button#add-keyframe-opacity s=sm wh=16 v=gh cur=p ml=xs: +
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "0"
              - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                  - - rtgl-view#keyframe-opacity-0 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 1000ms
                    - rtgl-view#keyframe-opacity-1 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 2000ms
          - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: scale
                  - rtgl-button#add-keyframe-scale s=sm wh=16 v=gh cur=p ml=xs: +
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "1"
              - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                  - - rtgl-view#keyframe-scale-0 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 500ms
                    - rtgl-view#keyframe-scale-1 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 1500ms
                    - rtgl-view#keyframe-scale-2 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 1000ms
          - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: rotation
                  - rtgl-button#add-keyframe-rotation s=sm wh=16 v=gh cur=p ml=xs: +
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "0deg"
              - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                  - []
---
case: timeline with empty selectedProperties
in:
  - template:
      - rtgl-view#timeline-container g=md w=f pos=rel:
          - rtgl-view d=h w=f mb=sm:
              - rtgl-view w=f ah=e:
                  - rtgl-text s=sm: "Total: ${totalDuration}"
          - $if selectedProperties.length > 0:
              - $for property in selectedProperties:
                  - rtgl-view d=h w=f av=c:
                      - rtgl-view w=48 av=c d=h:
                          - rtgl-text s=xs: ${property.name}
  - totalDuration: "1000ms"
    selectedProperties: []
  - functions: {}
out:
  template:
    - rtgl-view#timeline-container g=md w=f pos=rel:
        - rtgl-view d=h w=f mb=sm:
            - rtgl-view w=f ah=e:
                - rtgl-text s=sm: "Total: 1000ms"
---
case: timeline with non-editable mode
in:
  - template:
      - rtgl-view#timeline-container g=md w=f pos=rel:
          - rtgl-view d=h w=f mb=sm:
              - rtgl-view w=f ah=e:
                  - rtgl-text s=sm: "Total: ${totalDuration}"
          - $if selectedProperties.length > 0:
              - $for property in selectedProperties:
                  - rtgl-view d=h w=f av=c:
                      - rtgl-view w=48 av=c d=h:
                          - rtgl-text s=xs: ${property.name}
                          - $if editable:
                              rtgl-button#add-keyframe-${property.name} s=sm wh=16 v=gh cur=p ml=xs: +
                      - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                          - rtgl-text s=xs: ${property.initialValue}
  - totalDuration: "3000ms"
    editable: false
    selectedProperties:
      - name: "transform"
        initialValue: "translateX(0)"
      - name: "color"
        initialValue: "#000000"
  - functions: {}
out:
  template:
    - rtgl-view#timeline-container g=md w=f pos=rel:
        - rtgl-view d=h w=f mb=sm:
            - rtgl-view w=f ah=e:
                - rtgl-text s=sm: "Total: 3000ms"
        - - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: transform
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "translateX(0)"
          - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: color
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "#000000"
---
case: verify property.name interpolation in button IDs
in:
  - template:
      - $for property in properties:
          - rtgl-button#add-keyframe-${property.name}: "Add ${property.name}"
  - properties:
      - name: "width"
      - name: "height"
      - name: "background-color"
  - functions: {}
out:
  template:
    - - rtgl-button#add-keyframe-width: "Add width"
      - rtgl-button#add-keyframe-height: "Add height"
      - rtgl-button#add-keyframe-background-color: "Add background-color"
---
case: timeline with user-provided payload structure
in:
  - template:
      - rtgl-view#timeline-container g=md w=f pos=rel:
          - rtgl-view d=h w=f mb=sm:
              - rtgl-view w=f ah=e:
                  - rtgl-text s=sm: "Total: ${totalDuration}"
          - $if selectedProperties.length > 0:
              - $for property in selectedProperties:
                  - rtgl-view d=h w=f av=c:
                      - rtgl-view w=48 av=c d=h:
                          - rtgl-text s=xs: ${property.name}
                          - $if editable:
                              rtgl-button#add-keyframe-${property.name} s=sm wh=16 v=gh cur=p ml=xs: +
                      - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                          - rtgl-text s=xs: ${property.initialValue}
                      - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                          - $if property.keyframes:
                              - $for keyframe, j in property.keyframes:
                                  - rtgl-view#keyframe-${property.name}-${j} d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                                      - rtgl-text s=xs: ${keyframe.duration}ms
  - totalDuration: "1000ms"
    editable: true
    selectedProperties:
      - name: "x"
        initialValue: "123"
        keyframes:
          - duration: "123"
            value: "123"
            easing: "easein"
  - functions: {}
out:
  template:
    - rtgl-view#timeline-container g=md w=f pos=rel:
        - rtgl-view d=h w=f mb=sm:
            - rtgl-view w=f ah=e:
                - rtgl-text s=sm: "Total: 1000ms"
        - - rtgl-view d=h w=f av=c:
              - rtgl-view w=48 av=c d=h:
                  - rtgl-text s=xs: x
                  - rtgl-button#add-keyframe-x s=sm wh=16 v=gh cur=p ml=xs: +
              - rtgl-view h=24 w=24 av=c ah=e av=e mr=sm:
                  - rtgl-text s=xs: "123"
              - rtgl-view d=h w=f h=24 bgc=mu br=sm g=xs:
                  - - rtgl-view#keyframe-x-0 d=h p=xs h=f bgc=ac flex=1 br=sm ah=e av=e mr=xs:
                        - rtgl-text s=xs: 123ms
